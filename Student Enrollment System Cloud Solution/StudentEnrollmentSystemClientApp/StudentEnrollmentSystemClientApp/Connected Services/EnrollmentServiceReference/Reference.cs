//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentEnrollmentSystemClientApp.EnrollmentServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/StudentEnrollmentSystem")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateEnrolledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string studentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string studentNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateEnrolled {
            get {
                return this.dateEnrolledField;
            }
            set {
                if ((this.dateEnrolledField.Equals(value) != true)) {
                    this.dateEnrolledField = value;
                    this.RaisePropertyChanged("dateEnrolled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string studentID {
            get {
                return this.studentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.studentIDField, value) != true)) {
                    this.studentIDField = value;
                    this.RaisePropertyChanged("studentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string studentName {
            get {
                return this.studentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.studentNameField, value) != true)) {
                    this.studentNameField = value;
                    this.RaisePropertyChanged("studentName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enrollment", Namespace="http://schemas.datacontract.org/2004/07/StudentEnrollmentSystem")]
    [System.SerializableAttribute()]
    public partial class Enrollment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string courseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string gradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string studentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string courseID {
            get {
                return this.courseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.courseIDField, value) != true)) {
                    this.courseIDField = value;
                    this.RaisePropertyChanged("courseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string grade {
            get {
                return this.gradeField;
            }
            set {
                if ((object.ReferenceEquals(this.gradeField, value) != true)) {
                    this.gradeField = value;
                    this.RaisePropertyChanged("grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string studentID {
            get {
                return this.studentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.studentIDField, value) != true)) {
                    this.studentIDField = value;
                    this.RaisePropertyChanged("studentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Course", Namespace="http://schemas.datacontract.org/2004/07/StudentEnrollmentSystem")]
    [System.SerializableAttribute()]
    public partial class Course : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal costField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string courseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string courseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime scheduledTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal cost {
            get {
                return this.costField;
            }
            set {
                if ((this.costField.Equals(value) != true)) {
                    this.costField = value;
                    this.RaisePropertyChanged("cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string courseID {
            get {
                return this.courseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.courseIDField, value) != true)) {
                    this.courseIDField = value;
                    this.RaisePropertyChanged("courseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string courseName {
            get {
                return this.courseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.courseNameField, value) != true)) {
                    this.courseNameField = value;
                    this.RaisePropertyChanged("courseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime scheduledTime {
            get {
                return this.scheduledTimeField;
            }
            set {
                if ((this.scheduledTimeField.Equals(value) != true)) {
                    this.scheduledTimeField = value;
                    this.RaisePropertyChanged("scheduledTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EnrollmentServiceReference.IStudentEnrollment")]
    public interface IStudentEnrollment {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/insertStudent", ReplyAction="http://tempuri.org/IStudentEnrollment/insertStudentResponse")]
        string insertStudent(string studentID, string studentName, System.DateTime dateEnrolled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/insertStudent", ReplyAction="http://tempuri.org/IStudentEnrollment/insertStudentResponse")]
        System.Threading.Tasks.Task<string> insertStudentAsync(string studentID, string studentName, System.DateTime dateEnrolled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/getAllStudents", ReplyAction="http://tempuri.org/IStudentEnrollment/getAllStudentsResponse")]
        StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Student[] getAllStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/getAllStudents", ReplyAction="http://tempuri.org/IStudentEnrollment/getAllStudentsResponse")]
        System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Student[]> getAllStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/getEnrollmentsForStudent", ReplyAction="http://tempuri.org/IStudentEnrollment/getEnrollmentsForStudentResponse")]
        StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Enrollment[] getEnrollmentsForStudent(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/getEnrollmentsForStudent", ReplyAction="http://tempuri.org/IStudentEnrollment/getEnrollmentsForStudentResponse")]
        System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Enrollment[]> getEnrollmentsForStudentAsync(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/getCoursesForStudent", ReplyAction="http://tempuri.org/IStudentEnrollment/getCoursesForStudentResponse")]
        StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Course[] getCoursesForStudent(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/getCoursesForStudent", ReplyAction="http://tempuri.org/IStudentEnrollment/getCoursesForStudentResponse")]
        System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Course[]> getCoursesForStudentAsync(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/viewStudentDetails", ReplyAction="http://tempuri.org/IStudentEnrollment/viewStudentDetailsResponse")]
        StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Student viewStudentDetails(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/viewStudentDetails", ReplyAction="http://tempuri.org/IStudentEnrollment/viewStudentDetailsResponse")]
        System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Student> viewStudentDetailsAsync(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/insertCourse", ReplyAction="http://tempuri.org/IStudentEnrollment/insertCourseResponse")]
        string insertCourse(string courseID, string courseName, decimal cost, System.DateTime scheduledTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/insertCourse", ReplyAction="http://tempuri.org/IStudentEnrollment/insertCourseResponse")]
        System.Threading.Tasks.Task<string> insertCourseAsync(string courseID, string courseName, decimal cost, System.DateTime scheduledTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/viewCourses", ReplyAction="http://tempuri.org/IStudentEnrollment/viewCoursesResponse")]
        StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Course[] viewCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/viewCourses", ReplyAction="http://tempuri.org/IStudentEnrollment/viewCoursesResponse")]
        System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Course[]> viewCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/viewCourseDetails", ReplyAction="http://tempuri.org/IStudentEnrollment/viewCourseDetailsResponse")]
        StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Course viewCourseDetails(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/viewCourseDetails", ReplyAction="http://tempuri.org/IStudentEnrollment/viewCourseDetailsResponse")]
        System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Course> viewCourseDetailsAsync(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/viewEnrollmentsForCourse", ReplyAction="http://tempuri.org/IStudentEnrollment/viewEnrollmentsForCourseResponse")]
        StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Enrollment[] viewEnrollmentsForCourse(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/viewEnrollmentsForCourse", ReplyAction="http://tempuri.org/IStudentEnrollment/viewEnrollmentsForCourseResponse")]
        System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Enrollment[]> viewEnrollmentsForCourseAsync(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/enrollStudent", ReplyAction="http://tempuri.org/IStudentEnrollment/enrollStudentResponse")]
        string enrollStudent(string studentID, string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/enrollStudent", ReplyAction="http://tempuri.org/IStudentEnrollment/enrollStudentResponse")]
        System.Threading.Tasks.Task<string> enrollStudentAsync(string studentID, string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/getStudentsInCourse", ReplyAction="http://tempuri.org/IStudentEnrollment/getStudentsInCourseResponse")]
        StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Student[] getStudentsInCourse(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/getStudentsInCourse", ReplyAction="http://tempuri.org/IStudentEnrollment/getStudentsInCourseResponse")]
        System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Student[]> getStudentsInCourseAsync(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/setGradeForStudent", ReplyAction="http://tempuri.org/IStudentEnrollment/setGradeForStudentResponse")]
        string setGradeForStudent(string studentID, string courseID, string grade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/setGradeForStudent", ReplyAction="http://tempuri.org/IStudentEnrollment/setGradeForStudentResponse")]
        System.Threading.Tasks.Task<string> setGradeForStudentAsync(string studentID, string courseID, string grade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/getGradeForStudent", ReplyAction="http://tempuri.org/IStudentEnrollment/getGradeForStudentResponse")]
        string[] getGradeForStudent(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentEnrollment/getGradeForStudent", ReplyAction="http://tempuri.org/IStudentEnrollment/getGradeForStudentResponse")]
        System.Threading.Tasks.Task<string[]> getGradeForStudentAsync(string studentID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentEnrollmentChannel : StudentEnrollmentSystemClientApp.EnrollmentServiceReference.IStudentEnrollment, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentEnrollmentClient : System.ServiceModel.ClientBase<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.IStudentEnrollment>, StudentEnrollmentSystemClientApp.EnrollmentServiceReference.IStudentEnrollment {
        
        public StudentEnrollmentClient() {
        }
        
        public StudentEnrollmentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentEnrollmentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentEnrollmentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentEnrollmentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string insertStudent(string studentID, string studentName, System.DateTime dateEnrolled) {
            return base.Channel.insertStudent(studentID, studentName, dateEnrolled);
        }
        
        public System.Threading.Tasks.Task<string> insertStudentAsync(string studentID, string studentName, System.DateTime dateEnrolled) {
            return base.Channel.insertStudentAsync(studentID, studentName, dateEnrolled);
        }
        
        public StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Student[] getAllStudents() {
            return base.Channel.getAllStudents();
        }
        
        public System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Student[]> getAllStudentsAsync() {
            return base.Channel.getAllStudentsAsync();
        }
        
        public StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Enrollment[] getEnrollmentsForStudent(string studentID) {
            return base.Channel.getEnrollmentsForStudent(studentID);
        }
        
        public System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Enrollment[]> getEnrollmentsForStudentAsync(string studentID) {
            return base.Channel.getEnrollmentsForStudentAsync(studentID);
        }
        
        public StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Course[] getCoursesForStudent(string studentID) {
            return base.Channel.getCoursesForStudent(studentID);
        }
        
        public System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Course[]> getCoursesForStudentAsync(string studentID) {
            return base.Channel.getCoursesForStudentAsync(studentID);
        }
        
        public StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Student viewStudentDetails(string studentID) {
            return base.Channel.viewStudentDetails(studentID);
        }
        
        public System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Student> viewStudentDetailsAsync(string studentID) {
            return base.Channel.viewStudentDetailsAsync(studentID);
        }
        
        public string insertCourse(string courseID, string courseName, decimal cost, System.DateTime scheduledTime) {
            return base.Channel.insertCourse(courseID, courseName, cost, scheduledTime);
        }
        
        public System.Threading.Tasks.Task<string> insertCourseAsync(string courseID, string courseName, decimal cost, System.DateTime scheduledTime) {
            return base.Channel.insertCourseAsync(courseID, courseName, cost, scheduledTime);
        }
        
        public StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Course[] viewCourses() {
            return base.Channel.viewCourses();
        }
        
        public System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Course[]> viewCoursesAsync() {
            return base.Channel.viewCoursesAsync();
        }
        
        public StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Course viewCourseDetails(string courseID) {
            return base.Channel.viewCourseDetails(courseID);
        }
        
        public System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Course> viewCourseDetailsAsync(string courseID) {
            return base.Channel.viewCourseDetailsAsync(courseID);
        }
        
        public StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Enrollment[] viewEnrollmentsForCourse(string courseID) {
            return base.Channel.viewEnrollmentsForCourse(courseID);
        }
        
        public System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Enrollment[]> viewEnrollmentsForCourseAsync(string courseID) {
            return base.Channel.viewEnrollmentsForCourseAsync(courseID);
        }
        
        public string enrollStudent(string studentID, string courseID) {
            return base.Channel.enrollStudent(studentID, courseID);
        }
        
        public System.Threading.Tasks.Task<string> enrollStudentAsync(string studentID, string courseID) {
            return base.Channel.enrollStudentAsync(studentID, courseID);
        }
        
        public StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Student[] getStudentsInCourse(string courseID) {
            return base.Channel.getStudentsInCourse(courseID);
        }
        
        public System.Threading.Tasks.Task<StudentEnrollmentSystemClientApp.EnrollmentServiceReference.Student[]> getStudentsInCourseAsync(string courseID) {
            return base.Channel.getStudentsInCourseAsync(courseID);
        }
        
        public string setGradeForStudent(string studentID, string courseID, string grade) {
            return base.Channel.setGradeForStudent(studentID, courseID, grade);
        }
        
        public System.Threading.Tasks.Task<string> setGradeForStudentAsync(string studentID, string courseID, string grade) {
            return base.Channel.setGradeForStudentAsync(studentID, courseID, grade);
        }
        
        public string[] getGradeForStudent(string studentID) {
            return base.Channel.getGradeForStudent(studentID);
        }
        
        public System.Threading.Tasks.Task<string[]> getGradeForStudentAsync(string studentID) {
            return base.Channel.getGradeForStudentAsync(studentID);
        }
    }
}
