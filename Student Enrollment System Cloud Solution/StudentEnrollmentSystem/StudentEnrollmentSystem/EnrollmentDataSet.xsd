<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="EnrollmentDataSet" targetNamespace="http://tempuri.org/EnrollmentDataSet.xsd" xmlns:mstns="http://tempuri.org/EnrollmentDataSet.xsd" xmlns="http://tempuri.org/EnrollmentDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="StudentEnrollmentSystemConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="StudentEnrollmentSystemConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.StudentEnrollmentSystemConnectionString.ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EnrollmentTableAdapter" GeneratorDataComponentClassName="EnrollmentTableAdapter" Name="Enrollment" UserDataComponentName="EnrollmentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentEnrollmentSystemConnectionString (Web.config)" DbObjectName="StudentEnrollmentSystem.dbo.Enrollment" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Enrollment] WHERE (([studentID] = @Original_studentID) AND ([courseID] = @Original_courseID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_studentID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_courseID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="courseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Enrollment] ([studentID], [courseID], [grade]) VALUES (@studentID, @courseID, @grade)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@studentID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@courseID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="courseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@grade" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT studentID, courseID, grade FROM dbo.Enrollment</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Enrollment] SET [studentID] = @studentID, [courseID] = @courseID, [grade] = @grade WHERE (([studentID] = @Original_studentID) AND ([courseID] = @Original_courseID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@studentID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@courseID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="courseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@grade" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_studentID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_courseID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="courseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="studentID" DataSetColumn="studentID" />
              <Mapping SourceColumn="courseID" DataSetColumn="courseID" />
              <Mapping SourceColumn="grade" DataSetColumn="grade" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="StudentEnrollmentSystemConnectionString (Web.config)" DbObjectName="StudentEnrollmentSystem.dbo.Enrollment" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetEnrollmentForStudent" GetMethodModifier="Public" GetMethodName="GetEnrollmentForStudent" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetEnrollmentForStudent" UserSourceName="GetEnrollmentForStudent">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT studentID, courseID, grade FROM dbo.Enrollment
WHERE (studentID = @studentID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="studentID" ColumnName="studentID" DataSourceName="StudentEnrollmentSystem.dbo.Enrollment" DataTypeServer="varchar(10)" DbType="AnsiString" Direction="Input" ParameterName="@studentID" Precision="0" ProviderType="VarChar" Scale="0" Size="10" SourceColumn="studentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="StudentEnrollmentSystemConnectionString (Web.config)" DbObjectName="StudentEnrollmentSystem.dbo.Enrollment" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="getStudentEnrollmentsForCourse" GetMethodModifier="Public" GetMethodName="getStudentEnrollmentsForCourse" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="getStudentEnrollmentsForCourse" UserSourceName="getStudentEnrollmentsForCourse">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT studentID, courseID, grade FROM dbo.Enrollment
WHERE (courseID = @courseID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="courseID" ColumnName="courseID" DataSourceName="StudentEnrollmentSystem.dbo.Enrollment" DataTypeServer="varchar(10)" DbType="AnsiString" Direction="Input" ParameterName="@courseID" Precision="0" ProviderType="VarChar" Scale="0" Size="10" SourceColumn="courseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="StudentEnrollmentSystemConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Enrollment] ([studentID], [courseID]) VALUES (@studentID, @courseID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="studentID" ColumnName="studentID" DataSourceName="StudentEnrollmentSystem.dbo.Enrollment" DataTypeServer="varchar(10)" DbType="AnsiString" Direction="Input" ParameterName="@studentID" Precision="0" ProviderType="VarChar" Scale="0" Size="10" SourceColumn="studentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="courseID" ColumnName="courseID" DataSourceName="StudentEnrollmentSystem.dbo.Enrollment" DataTypeServer="varchar(10)" DbType="AnsiString" Direction="Input" ParameterName="@courseID" Precision="0" ProviderType="VarChar" Scale="0" Size="10" SourceColumn="courseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="StudentEnrollmentSystemConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SetGradeForStudent" Modifier="Public" Name="SetGradeForStudent" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="SetGradeForStudent">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[Enrollment] SET [grade] = @grade WHERE (([studentID] = @Original_studentID) AND ([courseID] = @Original_courseID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="grade" ColumnName="grade" DataSourceName="StudentEnrollmentSystem.dbo.Enrollment" DataTypeServer="varchar(10)" DbType="AnsiString" Direction="Input" ParameterName="@grade" Precision="0" ProviderType="VarChar" Scale="0" Size="10" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_studentID" ColumnName="studentID" DataSourceName="StudentEnrollmentSystem.dbo.Enrollment" DataTypeServer="varchar(10)" DbType="AnsiString" Direction="Input" ParameterName="@Original_studentID" Precision="0" ProviderType="VarChar" Scale="0" Size="10" SourceColumn="studentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_courseID" ColumnName="courseID" DataSourceName="StudentEnrollmentSystem.dbo.Enrollment" DataTypeServer="varchar(10)" DbType="AnsiString" Direction="Input" ParameterName="@Original_courseID" Precision="0" ProviderType="VarChar" Scale="0" Size="10" SourceColumn="courseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="EnrollmentDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="EnrollmentDataSet" msprop:Generator_UserDSName="EnrollmentDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Enrollment" msprop:Generator_TableClassName="EnrollmentDataTable" msprop:Generator_TableVarName="tableEnrollment" msprop:Generator_TablePropName="Enrollment" msprop:Generator_RowDeletingName="EnrollmentRowDeleting" msprop:Generator_RowChangingName="EnrollmentRowChanging" msprop:Generator_RowEvHandlerName="EnrollmentRowChangeEventHandler" msprop:Generator_RowDeletedName="EnrollmentRowDeleted" msprop:Generator_UserTableName="Enrollment" msprop:Generator_RowChangedName="EnrollmentRowChanged" msprop:Generator_RowEvArgName="EnrollmentRowChangeEvent" msprop:Generator_RowClassName="EnrollmentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="studentID" msprop:Generator_ColumnVarNameInTable="columnstudentID" msprop:Generator_ColumnPropNameInRow="studentID" msprop:Generator_ColumnPropNameInTable="studentIDColumn" msprop:Generator_UserColumnName="studentID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="courseID" msprop:Generator_ColumnVarNameInTable="columncourseID" msprop:Generator_ColumnPropNameInRow="courseID" msprop:Generator_ColumnPropNameInTable="courseIDColumn" msprop:Generator_UserColumnName="courseID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="grade" msprop:Generator_ColumnVarNameInTable="columngrade" msprop:Generator_ColumnPropNameInRow="grade" msprop:Generator_ColumnPropNameInTable="gradeColumn" msprop:Generator_UserColumnName="grade" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Enrollment" />
      <xs:field xpath="mstns:studentID" />
      <xs:field xpath="mstns:courseID" />
    </xs:unique>
  </xs:element>
</xs:schema>